#pragma once

/*
브루트포스(Brute-Force) 알고리즘

"가능한 모든 경우를 전부 다 시도해 보는" 가장 직관적인 탐색 기법

1. 개념
- 무식하게 모든 해답 후보를 전부 검사
- 해답이 되는 모든 조합, 순열, 경로 등을 빠짐없이 탐색

2. 언제 씀?
- 입력 크기 N이 작아서 2^N이나 N! 같은 폭발적인 경우의 수여도 감당 가능한 경우
- 문제 조건이 N <= 20 정도로 작아서 최대 2^20 ~ 10^6 또는 20! 이 아니면
- 엄밀한 해(Optimal solution)가 반드시 필요할 때

3.원리
1) 해답 후보 생성
	- 예) 부분집합 : N개 원소의 포함/미포함 2가지씩 -> 2^N 개
	- 예) 순열 : N개의 순서를 모두 뒤섞어 보기 -> N! 개
2) 각 후보를 검사
	- 예) 부분집합 합이 S가 되는지
	- 예) 순열이 "사전순 다음"인지
3) 조건에 맞으면 결과에 카운트 저장
	- 예) N = 3인 부분집합 전수 조사
	for (int mask = 0; mask < (1 << 3); ++mask)
	{
		int sum = 0;
		for (int i = 0; i < 3; ++i)
		{
			if (mask & (1 << i))
			{
				sum += arr[i];
			}
		}
		
		if (sum == S)
		{
			++answer;
		}
	}

4. 장.단점
1) 장점
	- 구현이 가장 쉽다
	- 모든 해답을 놓치지 않음
2) 단점
	- 경우의 수가 기하급수적으로 늘어나면 금방 느려진다.
	- 2^N, N! 만큼 시간이 필요
*/